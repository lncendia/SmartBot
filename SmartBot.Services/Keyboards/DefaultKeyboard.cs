using Telegram.Bot.Types.ReplyMarkups;

namespace SmartBot.Services.Keyboards;

/// <summary>
/// –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π –∫–ª–∞—Å—Å –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã—Ö –∫–ª–∞–≤–∏–∞—Ç—É—Ä –±–æ—Ç–∞
/// </summary>
public static class DefaultKeyboard
{
    /// <summary>
    /// Callback-–¥–∞–Ω–Ω—ã–µ –¥–ª—è –∫–Ω–æ–ø–∫–∏ –æ—Ç–º–µ–Ω—ã –¥–µ–π—Å—Ç–≤–∏—è
    /// </summary>
    public const string CancelCallbackData = "cancel";

    /// <summary>
    /// –ü—Ä–µ—Ñ–∏–∫—Å callback-–¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∫–Ω–æ–ø–∫–∏ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ
    /// </summary>
    public const string AnswerCallbackData = "answer_";

    /// <summary>
    /// Callback-–¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç—á–µ—Ç–∞ –Ω–∞ —Ä—É—á–Ω–æ–π –∞–Ω–∞–ª–∏–∑
    /// </summary>
    public const string SendForManualAnalysisCallbackData = "send_manual_analysis";
    
    /// <summary>
    /// Callback-–¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ –æ—Ç—á—ë—Ç–∞
    /// </summary>
    public const string RepeatAnalysisCallbackData = "repeat_analysis";

    /// <summary>
    /// –°–æ–∑–¥–∞—ë—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –æ–¥–Ω–æ–π –∫–Ω–æ–ø–∫–æ–π "–û—Ç–º–µ–Ω–∞"
    /// </summary>
    public static InlineKeyboardMarkup CancelKeyboard { get; } = new(
        InlineKeyboardButton.WithCallbackData(
            text: "‚ùå –û—Ç–º–µ–Ω–∏—Ç—å",
            callbackData: CancelCallbackData
        )
    );

    /// <summary>
    /// –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –æ–ø—Ü–∏–µ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç—á—ë—Ç–∞ –Ω–∞ —Ä—É—á–Ω—É—é –º–æ–¥–µ—Ä–∞—Ü–∏—é
    /// </summary>
    /// <remarks>
    /// –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ —Å–ª–µ–¥—É—é—â–∏—Ö —Å–ª—É—á–∞—è—Ö:
    /// - –°–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞
    /// - –¢—Ä–µ–±—É–µ—Ç—Å—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É –º–æ–¥–µ—Ä–∞—Ç–æ—Ä—É
    /// - –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã –ø—Ä–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–µ –æ—Ç—á—ë—Ç–∞
    /// </remarks>
    public static InlineKeyboardMarkup SendReportForManualAnalysisKeyboard { get; } = new(
        InlineKeyboardButton.WithCallbackData(
            text: "üìù –û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–∞ —Ä—É—á–Ω—É—é –ø—Ä–æ–≤–µ—Ä–∫—É",
            callbackData: SendForManualAnalysisCallbackData
        )
    );


    /// <summary>
    /// –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –æ–ø—Ü–∏–µ–π –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ –æ—Ç—á–µ—Ç–∞
    /// </summary>
    /// <remarks>
    /// –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∫–æ–≥–¥–∞:
    /// - –°–∏—Å—Ç–µ–º–∞ –∞–Ω–∞–ª–∏–∑–∞ –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–∞
    /// </remarks>
    public static InlineKeyboardMarkup RepeatReportAnalysisKeyboard { get; } = new(
        new List<List<InlineKeyboardButton>>
        {
            new()
            {
                InlineKeyboardButton.WithCallbackData(
                    text: "üîÇ –ü–æ–≤—Ç–æ—Ä–∏—Ç—å",
                    callbackData: RepeatAnalysisCallbackData
                )
            },
            new()
            {
                InlineKeyboardButton.WithCallbackData(
                    text: "üìù –û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–∞ —Ä—É—á–Ω—É—é –ø—Ä–æ–≤–µ—Ä–∫—É",
                    callbackData: SendForManualAnalysisCallbackData
                )
            },
        }
    );

    /// <summary>
    /// –°–æ–∑–¥–∞—ë—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π –¥–ª—è –æ—Ç–≤–µ—Ç–∞ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ
    /// </summary>
    /// <param name="reportId">–ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –æ—Ç—á—ë—Ç–∞</param>
    /// <param name="userId">–ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</param>
    /// <param name="isEveningReport">–§–ª–∞–≥ –≤–µ—á–µ—Ä–Ω–µ–≥–æ –æ—Ç—á—ë—Ç–∞</param>
    /// <returns>Inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–æ–π –æ—Ç–≤–µ—Ç–∞</returns>
    public static InlineKeyboardMarkup AnswerKeyboard(Guid reportId, long userId, bool isEveningReport)
    {
        // –°–æ–∑–¥–∞—ë–º –∫–Ω–æ–ø–∫—É –¥–ª—è –æ—Ç–≤–µ—Ç–∞ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ
        var answerButton = InlineKeyboardButton.WithCallbackData(
            text: "‚úçÔ∏è –û—Ç–≤–µ—Ç–∏—Ç—å",
            callbackData: $"{AnswerCallbackData}{reportId}_{userId}_{isEveningReport}"
        );

        // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –æ–¥–Ω–æ–π –∫–Ω–æ–ø–∫–æ–π
        return new InlineKeyboardMarkup(answerButton);
    }
}