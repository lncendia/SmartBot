using Telegram.Bot.Types.ReplyMarkups;

namespace SmartBot.Services.Keyboards;

/// <summary>
/// –ö–ª–∞—Å—Å –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤.
/// </summary>
public static class AdminKeyboard
{
    /// <summary>
    /// –ü—Ä–µ—Ñ–∏–∫—Å –¥–ª—è callback-–¥–∞–Ω–Ω—ã—Ö –∫–Ω–æ–ø–∫–∏ "–û—Å—Ç–∞–≤–∏—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π".
    /// </summary>
    public const string CommentReportCallbackData = "comment_";

    /// <summary>
    /// –ü—Ä–µ—Ñ–∏–∫—Å –¥–ª—è callback-–¥–∞–Ω–Ω—ã—Ö –∫–Ω–æ–ø–∫–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ—Ç—á—ë—Ç–∞.
    /// –§–æ—Ä–º–∞—Ç: "approve_[reportId]_[isEveningReport]"
    /// </summary>
    public const string ApproveReportCallbackData = "approve_";

    /// <summary>
    /// –ü—Ä–µ—Ñ–∏–∫—Å –¥–ª—è callback-–¥–∞–Ω–Ω—ã—Ö –∫–Ω–æ–ø–∫–∏ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è –æ—Ç—á—ë—Ç–∞.
    /// –§–æ—Ä–º–∞—Ç: "reject_[reportId]_[isEveningReport]"
    /// </summary>
    public const string RejectReportCallbackData = "reject_";

    /// <summary>
    /// Callback-–¥–∞–Ω–Ω—ã–µ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥".
    /// </summary>
    public const string GoBackCallbackData = "admin_goback";

    /// <summary>
    /// Callback-–¥–∞–Ω–Ω—ã–µ –¥–ª—è –∫–Ω–æ–ø–∫–∏ —É–¥–∞–ª–µ–Ω–∏—è —á–∞—Ç–∞ (—Å –ø–æ—Å—Ç—Ñ–∏–∫—Å–æ–º ID —á–∞—Ç–∞).
    /// </summary>
    public const string DeleteChatCallbackData = "delete_chat_";

    /// <summary>
    /// Callback-–¥–∞–Ω–Ω—ã–µ –¥–ª—è –∫–Ω–æ–ø–∫–∏ –≤—ã–±–æ—Ä–∞ —á–∞—Ç–∞ (—Å –ø–æ—Å—Ç—Ñ–∏–∫—Å–æ–º ID —á–∞—Ç–∞).
    /// </summary>
    public const string SelectChatCallbackData = "select_chat_";

    /// <summary>
    /// Callback-–¥–∞–Ω–Ω—ã–µ –¥–ª—è –∫–æ–º–∞–Ω–¥—ã –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    /// </summary>
    public const string ChangeUserCallbackData = "change_user";
    
    /// <summary>
    /// Callback-–¥–∞–Ω–Ω—ã–µ –¥–ª—è –∫–æ–º–∞–Ω–¥—ã –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ä–∞–±–æ—á–µ–≥–æ —á–∞—Ç–∞.
    /// </summary>
    public const string AddWorkingChatCallbackData = "add_working_chat";

    /// <summary>
    /// Callback-–¥–∞–Ω–Ω—ã–µ –¥–ª—è –∫–æ–º–∞–Ω–¥—ã —É–¥–∞–ª–µ–Ω–∏—è —Ä–∞–±–æ—á–µ–≥–æ —á–∞—Ç–∞.
    /// </summary>
    public const string RemoveWorkingChatCallbackData = "remove_working_chat";

    /// <summary>
    /// Callback-–¥–∞–Ω–Ω—ã–µ –¥–ª—è –∫–æ–º–∞–Ω–¥—ã —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Ä–∞–±–æ—á–µ–≥–æ —á–∞—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.
    /// </summary>
    public const string SetWorkingChatCallbackData = "set_working_chat";

    /// <summary>
    /// Callback-–¥–∞–Ω–Ω—ã–µ –¥–ª—è –≤—ã–±–æ—Ä–∞ –æ–±—ã—á–Ω–æ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.
    /// </summary>
    public const string AssignAdminPart = "assign-admin";

    /// <summary>
    /// Callback-–¥–∞–Ω–Ω—ã–µ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ç–µ–ª–µ-–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.
    /// </summary>
    public const string AssignTeleAdminPart = "assign-teleadmin";
    
    /// <summary>
    /// Callback-–¥–∞–Ω–Ω—ã–µ –¥–ª—è –≤—ã–±–æ—Ä–∞ –æ–±—ã—á–Ω–æ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.
    /// </summary>
    public const string DemoteAdminPart = "demote-admin";
    
    /// <summary>
    /// –ß–∞—Å—Ç—å callback-–¥–∞–Ω–Ω—ã—Ö, –∏–¥–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä—É—é—â–∞—è –∏–∑–º–µ–Ω–µ–Ω–∏–µ –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    /// –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–ª–Ω—ã—Ö callback-–¥–∞–Ω–Ω—ã—Ö.
    /// </summary>
    public const string EditUserNamePart = "name";

    /// <summary>
    /// –ß–∞—Å—Ç—å callback-–¥–∞–Ω–Ω—ã—Ö, –∏–¥–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä—É—é—â–∞—è –∏–∑–º–µ–Ω–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ—Å—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    /// –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–ª–Ω—ã—Ö callback-–¥–∞–Ω–Ω—ã—Ö.
    /// </summary>
    public const string EditUserPositionPart = "position";
    
    /// <summary>
    /// –ß–∞—Å—Ç—å callback-–¥–∞–Ω–Ω—ã—Ö, –∏–¥–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä—É—é—â–∞—è –∏–∑–º–µ–Ω–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ—Å—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    /// –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–ª–Ω—ã—Ö callback-–¥–∞–Ω–Ω—ã—Ö.
    /// </summary>
    public const string BlockUserPositionPart = "block";

    /// <summary>
    /// Callback-–¥–∞–Ω–Ω—ã–µ –¥–ª—è –∫–æ–º–∞–Ω–¥—ã –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    /// </summary>
    public const string EditUserCallbackData = "edit_user_";
    
    /// <summary>
    /// –ü–æ–ª–Ω—ã–µ callback-–¥–∞–Ω–Ω—ã–µ –¥–ª—è –≤—ã–±–æ—Ä–∞ –æ–ø–µ—Ä–∞—Ü–∏–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    /// </summary>
    private const string EditUserNameCallbackData = $"{EditUserCallbackData}{EditUserNamePart}";

    /// <summary>
    /// –ü–æ–ª–Ω—ã–µ callback-–¥–∞–Ω–Ω—ã–µ –¥–ª—è –≤—ã–±–æ—Ä–∞ –æ–ø–µ—Ä–∞—Ü–∏–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è –¥–æ–ª–∂–Ω–æ—Å—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    /// </summary>
    private const string EditUserPositionCallbackData = $"{EditUserCallbackData}{EditUserPositionPart}";
    
    /// <summary>
    /// Callback-–¥–∞–Ω–Ω—ã–µ –¥–ª—è –∫–æ–º–∞–Ω–¥—ã –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.
    /// </summary>
    private const string AssignAdminCallbackData = $"{EditUserCallbackData}{AssignAdminPart}";
    
    /// <summary>
    /// Callback-–¥–∞–Ω–Ω—ã–µ –¥–ª—è –∫–æ–º–∞–Ω–¥—ã –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.
    /// </summary>
    private const string AssignTeleAdminCallbackData = $"{EditUserCallbackData}{AssignTeleAdminPart}";

    /// <summary>
    /// Callback-–¥–∞–Ω–Ω—ã–µ –¥–ª—è –∫–æ–º–∞–Ω–¥—ã —Ä–∞–∑–∂–∞–ª–æ–≤–∞–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.
    /// </summary>
    private const string DemoteAdminCallbackData = $"{EditUserCallbackData}{DemoteAdminPart}";
    
    /// <summary>
    /// Callback-–¥–∞–Ω–Ω—ã–µ –¥–ª—è –∫–æ–º–∞–Ω–¥—ã —Ä–∞–∑–∂–∞–ª–æ–≤–∞–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.
    /// </summary>
    private const string BlockUserCallbackData = $"{EditUserCallbackData}{BlockUserPositionPart}";

    /// <summary>
    /// –û—Å–Ω–æ–≤–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ —Å –¥–µ–π—Å—Ç–≤–∏—è–º–∏.
    /// </summary>
    public static InlineKeyboardMarkup MainKeyboard { get; } = new(
        new List<List<InlineKeyboardButton>>
        {
            new()
            {
                InlineKeyboardButton.WithCallbackData(
                    text: "‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
                    callbackData: ChangeUserCallbackData
                )
            },
            new()
            {
                InlineKeyboardButton.WithCallbackData(
                    text: "üÜï –î–æ–±–∞–≤–∏—Ç—å —Ä–∞–±–æ—á–∏–π —á–∞—Ç",
                    callbackData: AddWorkingChatCallbackData
                )
            },
            new()
            {
                InlineKeyboardButton.WithCallbackData(
                    text: "üóëÔ∏è –£–¥–∞–ª–∏—Ç—å —Ä–∞–±–æ—á–∏–π —á–∞—Ç",
                    callbackData: RemoveWorkingChatCallbackData
                )
            },
            new()
            {
                InlineKeyboardButton.WithCallbackData(
                    text: "üí¨ –ù–∞–∑–Ω–∞—á–∏—Ç—å —Ä–∞–±–æ—á–∏–π —á–∞—Ç",
                    callbackData: SetWorkingChatCallbackData
                )
            }
        }
    );

    /// <summary>
    /// –°–æ–∑–¥–∞—ë—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ —Å –∫–Ω–æ–ø–∫–æ–π "–û—Å—Ç–∞–≤–∏—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π".
    /// </summary>
    /// <param name="reportId">–ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –æ—Ç—á—ë—Ç–∞, –∫ –∫–æ—Ç–æ—Ä–æ–º—É –±—É–¥–µ—Ç –ø—Ä–∏–≤—è–∑–∞–Ω –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π.</param>
    /// <param name="isEveningReport">–§–ª–∞–≥ –≤–µ—á–µ—Ä–Ω–µ–≥–æ –æ—Ç—á—ë—Ç–∞.</param>
    /// <returns>–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–æ–π –¥–ª—è –æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è.</returns>
    public static InlineKeyboardMarkup CommentReportKeyboard(Guid reportId, bool isEveningReport)
    {
        // –°–æ–∑–¥–∞—ë–º –∫–Ω–æ–ø–∫—É —Å callback-–∑–∞–ø—Ä–æ—Å–æ–º
        var button = InlineKeyboardButton.WithCallbackData(
            text: "–û—Å—Ç–∞–≤–∏—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π üëÄ",
            callbackData: $"{CommentReportCallbackData}{reportId}_{isEveningReport}"
        );

        // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –æ–¥–Ω–æ–π –∫–Ω–æ–ø–∫–æ–π
        return new InlineKeyboardMarkup(button);
    }

    /// <summary>
    /// –°–æ–∑–¥–∞—ë—Ç –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ —Å –¥–µ–π—Å—Ç–≤–∏—è–º–∏ –ø–æ –æ—Ç—á—ë—Ç—É
    /// </summary>
    /// <param name="reportId">–ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –æ—Ç—á—ë—Ç–∞ –¥–ª—è –ø—Ä–∏–≤—è–∑–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π</param>
    /// <param name="isEveningReport">–§–ª–∞–≥, —É–∫–∞–∑—ã–≤–∞—é—â–∏–π –Ω–∞ —Ç–∏–ø –æ—Ç—á—ë—Ç–∞ (true - –≤–µ—á–µ—Ä–Ω–∏–π, false - —É—Ç—Ä–µ–Ω–Ω–∏–π)</param>
    /// <param name="username">–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)</param>
    /// <returns>–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∏ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è –æ—Ç—á—ë—Ç–∞</returns>
    public static InlineKeyboardMarkup VerifyReportKeyboard(Guid reportId, bool isEveningReport, string? username)
    {
        var usernameSection = username != null
            ? $"_{username}"
            : string.Empty;

        var keyboard = new List<List<InlineKeyboardButton>>
        {
            new()
            {
                InlineKeyboardButton.WithCallbackData(
                    text: "‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å",
                    callbackData: $"{ApproveReportCallbackData}{reportId}_{isEveningReport}{usernameSection}"
                )
            },
            new()
            {
                InlineKeyboardButton.WithCallbackData(
                    text: "‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å",
                    callbackData: $"{RejectReportCallbackData}{reportId}_{isEveningReport}"
                )
            }
        };

        // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
        return new InlineKeyboardMarkup(keyboard);
    }

    /// <summary>
    /// –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–æ–π "–ù–∞–∑–∞–¥".
    /// </summary>
    public static InlineKeyboardMarkup GoBackKeyboard { get; } = new(
        InlineKeyboardButton.WithCallbackData(
            text: "–ù–∞–∑–∞–¥ ‚Ü©Ô∏è",
            callbackData: GoBackCallbackData
        )
    );
    
    /// <summary>
    /// –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ –∏–∑–º–µ–Ω—è–µ–º—ã—Ö –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    /// </summary>
    public static InlineKeyboardMarkup EditUserTypeKeyboard { get; } = new(
        new List<List<InlineKeyboardButton>>
        {
            new()
            {
                InlineKeyboardButton.WithCallbackData(
                    text: "üë®‚Äçüíº –ù–∞–∑–Ω–∞—á–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º",
                    callbackData: AssignAdminCallbackData
                ),
            },
            new()
            {
                InlineKeyboardButton.WithCallbackData(
                    text: "üë®‚Äçüíª –ù–∞–∑–Ω–∞—á–∏—Ç—å —Ç–µ–ª–µ-–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º",
                    callbackData: AssignTeleAdminCallbackData
                ),
            },
            new()
            {
                InlineKeyboardButton.WithCallbackData(
                    text: "üë®‚Äç‚öñÔ∏è –†–∞–∑–∂–∞–ª–æ–≤–∞—Ç—å",
                    callbackData: DemoteAdminCallbackData
                )
            },
            new()
            {
                InlineKeyboardButton.WithCallbackData(
                    text: "üìù –ò–∑–º–µ–Ω–∏—Ç—å –∏–º—è",
                    callbackData: EditUserNameCallbackData
                ),
            },
            new()
            {
                InlineKeyboardButton.WithCallbackData(
                    text: "üíº –ò–∑–º–µ–Ω–∏—Ç—å –¥–æ–ª–∂–Ω–æ—Å—Ç—å",
                    callbackData: EditUserPositionCallbackData
                ),
            },
            new()
            {
                InlineKeyboardButton.WithCallbackData(
                    text: "‚õî –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å",
                    callbackData: BlockUserCallbackData
                )
            },
            new()
            {
                InlineKeyboardButton.WithCallbackData(
                    text: "‚Ü©Ô∏è –ù–∞–∑–∞–¥",
                    callbackData: GoBackCallbackData
                )
            }
        });

    /// <summary>
    /// –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ä–∞–±–æ—á–µ–≥–æ —á–∞—Ç–∞ —Å –∑–∞–ø—Ä–æ—Å–æ–º –¥–æ—Å—Ç—É–ø–∞.
    /// </summary>
    /// <remarks>
    /// –ü–æ–∑–≤–æ–ª—è–µ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –≤—ã–±—Ä–∞—Ç—å —á–∞—Ç –∏–∑ —Å–ø–∏—Å–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö.
    /// –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
    /// - –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –∏–º–µ–Ω–Ω–æ —á–∞—Ç (–Ω–µ –∫–∞–Ω–∞–ª)
    /// - –¢—Ä–µ–±—É–µ—Ç –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –≤ –≤—ã–±—Ä–∞–Ω–Ω–æ–º —á–∞—Ç–µ
    /// </remarks>
    public static ReplyKeyboardMarkup SelectChatKeyboard { get; } = new(
        new KeyboardButton("üìã –í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–±–æ—á–∏–π —á–∞—Ç")
        {
            RequestChat = new KeyboardButtonRequestChat
            {
                ChatIsChannel = false,
                RequestTitle = true,
                BotIsMember = true,
                RequestId = 0
            }
        }
    )
    {
        ResizeKeyboard = true
    };

    /// <summary>
    /// –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —á–∞—Ç–∞.
    /// </summary>
    /// <remarks>
    /// –ü–æ–∑–≤–æ–ª—è–µ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –≤—ã–±—Ä–∞—Ç—å –æ–¥–Ω–æ–≥–æ –∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.
    /// –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
    /// - –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—ã–±–∏—Ä–∞–µ–º—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: 1
    /// - –¢—Ä–µ–±—É–µ—Ç, —á—Ç–æ–±—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –±—ã–ª–∏ —É—á–∞—Å—Ç–Ω–∏–∫–∞–º–∏ —Ç–µ–∫—É—â–µ–≥–æ —á–∞—Ç–∞
    /// </remarks>
    public static ReplyKeyboardMarkup SelectUserKeyboard { get; } = new(
        new KeyboardButton("üë§ –í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
        {
            RequestUsers = new KeyboardButtonRequestUsers(0)
            {
                MaxQuantity = 1,
                UserIsBot = false
            }
        }
    )
    {
        ResizeKeyboard = true
    };


    /// <summary>
    /// –°–æ–∑–¥–∞–µ—Ç –∫–Ω–æ–ø–∫–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ —á–∞—Ç–∞.
    /// </summary>
    /// <param name="channels">–°–ø–∏—Å–æ–∫ —á–∞—Ç–æ–≤.</param>
    /// <returns>–°–ø–∏—Å–æ–∫ –∫–Ω–æ–ø–æ–∫ —Å –Ω–æ–º–µ—Ä–∞–º–∏ —á–∞—Ç–æ–≤.</returns>
    public static InlineKeyboardMarkup DeleteChatKeyboard((long id, string name)[] channels)
    {
        // –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —á–∞—Ç–∞
        var keys = channels.Select((channel, index) =>
        {
            // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —ç–º–æ–¥–∂–∏-–Ω–æ–º–µ—Ä –¥–ª—è –∫–Ω–æ–ø–∫–∏
            var emojiNumber = NumberToEmoji(index + 1); // –ù—É–º–µ—Ä–∞—Ü–∏—è —Å 1

            return new[]
            {
                InlineKeyboardButton.WithCallbackData(
                    text: $"{emojiNumber} {channel.name}",
                    callbackData: $"{DeleteChatCallbackData}{channel.id}"
                )
            };
        }).ToList();

        // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥"
        keys.Add([
            InlineKeyboardButton.WithCallbackData(
                text: "‚Ü©Ô∏è –ù–∞–∑–∞–¥",
                callbackData: GoBackCallbackData
            )
        ]);

        // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
        return new InlineKeyboardMarkup(keys);
    }

    /// <summary>
    /// –°–æ–∑–¥–∞–µ—Ç –∫–Ω–æ–ø–∫–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ —á–∞—Ç–∞.
    /// </summary>
    /// <param name="channels">–°–ø–∏—Å–æ–∫ —á–∞—Ç–æ–≤.</param>
    /// <param name="userId">–ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.</param>
    /// <returns>–°–ø–∏—Å–æ–∫ –∫–Ω–æ–ø–æ–∫ —Å –Ω–æ–º–µ—Ä–∞–º–∏ —á–∞—Ç–æ–≤.</returns>
    public static InlineKeyboardMarkup SelectWorkingChatKeyboard((long id, string name)[] channels, long? userId = null)
    {
        // –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —á–∞—Ç–∞
        var keys = channels.Select((channel, index) =>
        {
            // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —ç–º–æ–¥–∂–∏-–Ω–æ–º–µ—Ä –¥–ª—è –∫–Ω–æ–ø–∫–∏
            var emojiNumber = NumberToEmoji(index + 1); // –ù—É–º–µ—Ä–∞—Ü–∏—è —Å 1

            // –§–æ—Ä–º–∏—Ä—É–µ–º Callback-–¥–∞–Ω–Ω—ã–µ
            var callbackData = userId.HasValue
                ? $"{SelectChatCallbackData}{userId}_{channel.id}"
                : $"{SelectChatCallbackData}{channel.id}";

            return new[]
            {
                InlineKeyboardButton.WithCallbackData(
                    text: $"{emojiNumber} {channel.name}",
                    callbackData: callbackData
                )
            };
        }).ToList();

        // –ï—Å–ª–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –¥–æ–±–∞–≤–∏—Ç—å –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥"
        if (!userId.HasValue)
        {
            // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥"
            keys.Add([
                InlineKeyboardButton.WithCallbackData(
                    text: "‚Ü©Ô∏è –ù–∞–∑–∞–¥",
                    callbackData: GoBackCallbackData
                )
            ]);
        }

        // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
        return new InlineKeyboardMarkup(keys);
    }

    /// <summary>
    /// –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç —á–∏—Å–ª–æ –≤ —Å—Ç—Ä–æ–∫—É —ç–º–æ–¥–∂–∏-–Ω–æ–º–µ—Ä–æ–≤.
    /// </summary>
    /// <param name="number">–ß–∏—Å–ª–æ –¥–ª—è –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è.</param>
    /// <returns>–°—Ç—Ä–æ–∫–∞ —Å —ç–º–æ–¥–∂–∏-–Ω–æ–º–µ—Ä–∞–º–∏.</returns>
    private static string NumberToEmoji(int number)
    {
        // –°–ª–æ–≤–∞—Ä—å –¥–ª—è –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è —Ü–∏—Ñ—Ä –≤ —ç–º–æ–¥–∂–∏
        var digitToEmoji = new Dictionary<int, string>
        {
            { 0, "0Ô∏è‚É£" },
            { 1, "1Ô∏è‚É£" },
            { 2, "2Ô∏è‚É£" },
            { 3, "3Ô∏è‚É£" },
            { 4, "4Ô∏è‚É£" },
            { 5, "5Ô∏è‚É£" },
            { 6, "6Ô∏è‚É£" },
            { 7, "7Ô∏è‚É£" },
            { 8, "8Ô∏è‚É£" },
            { 9, "9Ô∏è‚É£" }
        };

        // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —á–∏—Å–ª–æ –≤ —Å—Ç—Ä–æ–∫—É –∏ —Ä–∞–∑–±–∏–≤–∞–µ–º –Ω–∞ —Ü–∏—Ñ—Ä—ã
        var digits = number.ToString().Select(c => int.Parse(c.ToString()));

        // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –∫–∞–∂–¥—É—é —Ü–∏—Ñ—Ä—É –≤ —ç–º–æ–¥–∂–∏ –∏ –æ–±—ä–µ–¥–∏–Ω—è–µ–º –≤ —Å—Ç—Ä–æ–∫—É
        return string.Join("", digits.Select(d => digitToEmoji[d]));
    }
}